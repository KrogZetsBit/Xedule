volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  production_redis_data: {}
  production_tor_data: {}



services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production_tor/django/Dockerfile

    image: xedule_production_django
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production_tor/postgres/Dockerfile
    image: xedule_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  traefik:
    build:
      context: .
      dockerfile: ./compose/production_tor/traefik/Dockerfile
    image: xedule_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme
    ports:
      - '0.0.0.0:81:81'
      - '0.0.0.0:443:443'
      - '0.0.0.0:5555:5555'

  redis:
    image: docker.io/redis:6

    volumes:
      - production_redis_data:/data


  celeryworker:
    <<: *django
    image: xedule_production_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: xedule_production_celerybeat
    command: /start-celerybeat

  flower:
    <<: *django
    image: xedule_production_flower
    command: /start-flower

  awscli:
    build:
      context: .
      dockerfile: ./compose/production_tor/aws/Dockerfile
    env_file:
      - ./.envs/.production/.django
    volumes:
      - production_postgres_data_backups:/backups:z

  tor:
    build:
      context: .
      dockerfile: ./compose/production_tor/tor/Dockerfile
    image: xedule_production_tor
    restart: unless-stopped
    depends_on:
      - traefik
    volumes:
      - production_tor_data:/var/lib/tor
